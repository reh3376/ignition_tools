# Ignition Vision Button Click Handler
# Generated by IGN Scripts
# Template: vision/button_click_handler
# Generated: {{ timestamp }}

"""
Button click handler for {{ component_name }}
{{ description | default("Basic button click event handler") }}
"""

{% if imports %}
# Imports
{% for import_line in imports %}
{{ import_line }}
{% endfor %}

{% endif %}
def handle_button_click(event):
    """
    Handle button click event for {{ component_name }}
    
    Args:
        event: The actionPerformed event object from Ignition
    """
    try:
        {% if action_type == "navigation" %}
        # Navigate to window: {{ target_window }}
        {% if window_params %}
        params = {{ window_params | tojson }}
        system.nav.openWindow("{{ target_window }}", params)
        {% else %}
        system.nav.openWindow("{{ target_window }}")
        {% endif %}
        
        {% elif action_type == "tag_write" %}
        # Write value to tag: {{ target_tag }}
        system.tag.write("{{ target_tag }}", {{ tag_value }})
        
        {% elif action_type == "popup" %}
        # Show popup window: {{ popup_window }}
        {% if popup_params %}
        params = {{ popup_params | tojson }}
        system.nav.openWindow("{{ popup_window }}", params)
        {% else %}
        system.nav.openWindow("{{ popup_window }}")
        {% endif %}
        
        {% elif action_type == "database" %}
        # Execute database query
        query = """{{ sql_query }}"""
        {% if query_params %}
        params = {{ query_params | tojson }}
        system.db.runUpdateQuery(query, params)
        {% else %}
        system.db.runUpdateQuery(query)
        {% endif %}
        
        {% elif action_type == "custom" %}
        # Custom action code
        {{ custom_code | indent(8) }}
        
        {% else %}
        # Default action - show message
        system.gui.messageBox("Button clicked: {{ component_name }}")
        {% endif %}
        
        {% if logging_enabled %}
        # Log the action
        logger = system.util.getLogger("{{ logger_name | default('ButtonHandler') }}")
        logger.info("Button clicked: {{ component_name }}")
        {% endif %}
        
    except Exception as e:
        # Error handling
        {% if show_error_popup %}
        system.gui.errorBox("Error in button handler: %s" % str(e))
        {% endif %}
        
        # Log the error
        logger = system.util.getLogger("{{ logger_name | default('ButtonHandler') }}")
        logger.error("Error in button click handler for {{ component_name }}: %s", str(e))
        
        {% if reraise_errors %}
        raise
        {% endif %}

# Bind this function to the button's actionPerformed event
{% if component_path %}
# Component path: {{ component_path }}
{% endif %}
# Event: actionPerformed
# Function: handle_button_click 